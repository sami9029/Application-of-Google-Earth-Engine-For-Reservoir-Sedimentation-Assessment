// Import landsat 8 OLI image 
var dataset = ee.ImageCollection("LANDSAT/LC08/C02/T1_TOA");
var trueColor432 = dataset.select(['B4', 'B3', 'B2']);
var trueColor432Vis = {
  min: 0.0,
  max: 0.4,
};
Map.setCenter(6.746, 46.529, 6);
Map.addLayer(trueColor432, trueColor432Vis, 'True Color (432)');
// visualization parmeter 
var visualization = {
  bands: [ 'B3', 'B2', 'B1'],
  min: 0.0,
  max: 0.3,
};
Map.centerObject(reservoir, 10)

// This function masks clouds, cloud shadows, and bad pixels in Landsat 8 imagery.
var maskL8sr = function(image) {
  var cloudShadowBitMask = ee.Number(2).pow(3).int();
  var cloudsBitMask = ee.Number(2).pow(5).int();
  var qa = image.select('QA_PIXEL');
  var mask = qa.bitwiseAnd(cloudShadowBitMask).eq(0)
      .and(qa.bitwiseAnd(cloudsBitMask).eq(0))
      .and(qa.bitwiseAnd(ee.Number(2).pow(0).int()).not());
  return image.updateMask(mask);
};

// date of satelite pass  at Jun_17_2022
var jun_17_2022 = dataset.filter(ee.Filter.date('2022-06-01', '2022-06-02'))
                    .filter(ee.Filter.bounds(reservoir))
                    .filter(ee.Filter.lt('CLOUD_COVER', 30))
                    .map(maskL8sr);
print('available images at jun_17_2022' ,jun_17_2022.size());
print(jun_17_2022)
var Jun_17_2022 = jun_17_2022.median().clip(reservoir);
Map.addLayer(Jun_17_2022, visualization, 'Jun_17_2022');

// date of satelite pass  at May_29_2022
var may_29_2022 = dataset.filter(ee.Filter.date('2021-05-29', '2021-05-30'))
                    .filter(ee.Filter.bounds(reservoir))
                    .filter(ee.Filter.lt('CLOUD_COVER', 30))
                    .map(maskL8sr);
print('available images at may_29_2022' ,may_29_2022.size());
print(may_29_2022)
var May_29_2022 = may_29_2022.median().clip(reservoir);
Map.addLayer(May_29_2022, visualization, 'May_29_2022');

// date of satelite pass  at May_13_2021  ******************
var may_13_2021 = dataset.filter(ee.Filter.date('2021-05-13', '2021-05-14'))
                    .filter(ee.Filter.bounds(reservoir))
                    .filter(ee.Filter.lt('CLOUD_COVER', 30))
                    .map(maskL8sr);
print('available images at may_13_2021' ,may_13_2021.size());
print(may_13_2021)
var May_13_2021 = may_13_2021.median().clip(reservoir);
Map.addLayer(May_13_2021, visualization, 'May_13_2021');

// date of satelite pass  at Mar_10_2021
var mar_10_2021 = dataset.filter(ee.Filter.date('2021-03-26', '2021-03-27'))
                    .filter(ee.Filter.bounds(reservoir))
                    .filter(ee.Filter.lt('CLOUD_COVER', 30))
                    .map(maskL8sr);
print('available images at mar_10_2021' ,mar_10_2021.size());
print(mar_10_2021)
var Mar_10_2021 = mar_10_2021.median().clip(reservoir);
Map.addLayer(Mar_10_2021, visualization, 'Mar_10_2021');

// date of satelite pass  at Feb_25_2022 2022/02/25  
var feb_25_2022 = dataset.filter(ee.Filter.date('2022-02-25', '2022-02-26'))
                    .filter(ee.Filter.bounds(reservoir))
                    .filter(ee.Filter.lt('CLOUD_COVER', 30))
                    .map(maskL8sr);
print('available images at feb_25_2022' ,feb_25_2022.size());
print(feb_25_2022)
var Feb_25_2022 = feb_25_2022.median().clip(reservoir);
Map.addLayer(Feb_25_2022, visualization, 'Feb_25_2022');

// date of satelite pass  at Dec_26_2022
var dec_26_2022 = dataset.filter(ee.Filter.date('2022-12-26', '2022-12-27'))
                    .filter(ee.Filter.bounds(reservoir))
                    .filter(ee.Filter.lt('CLOUD_COVER', 30))
                    .map(maskL8sr);
print('available images at dec_26_2022' ,dec_26_2022.size());
print(dec_26_2022)
var Dec_26_2022 = dec_26_2022.median().clip(reservoir);
Map.addLayer(Dec_26_2022, visualization, 'Dec_26_2022');

// date of satelite pass  at Nov_21_2021
var nov_21_2021 = dataset.filter(ee.Filter.date('2021-11-21', '2021-11-22'))
                    .filter(ee.Filter.bounds(reservoir))
                    .filter(ee.Filter.lt('CLOUD_COVER', 30))
                    .map(maskL8sr);
print('available images at nov_21_2021 ' ,nov_21_2021 .size());
print(nov_21_2021 )
var Nov_21_2021  = nov_21_2021 .median().clip(reservoir);
Map.addLayer(Nov_21_2021, visualization, 'Nov_21_2021');
 
// date of satelite pass  at Oct_15_2022   2022/09/21 
var oct_15_2022 = dataset.filter(ee.Filter.date('2022-09-21', '2022-09-22'))
                    .filter(ee.Filter.bounds(reservoir))
                    .filter(ee.Filter.lt('CLOUD_COVER', 30))
                    .map(maskL8sr);
print('available images at oct_15_2022 ' ,oct_15_2022.size());
print(oct_15_2022 )
var Oct_15_2022 = oct_15_2022.median().clip(reservoir);
Map.addLayer(Oct_15_2022, visualization, 'Oct_15_2022');


// a function to calculate NDWI 
var calculate_ndwi = function (image, name){
  // add the NDWI band to the image
  var ndwi = image.normalizedDifference(['B3','B6']).rename(['ndwi']);
  var threshold = ndwi.gt(0)
  image = image.addBands(ndwi)
  Map.centerObject(reservoir, 10)
  Map.addLayer(threshold, visparam, name)
  // a function to calculate area
  var area_img = threshold.multiply(ee.Image.pixelArea())
  var reduce = area_img.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: reservoir ,
    scale: 10,
    maxPixels: 1e10
  })
  // adding area of water as a band
  image = image.addBands(area_img);
  // convert to square kilometers
  var SqKm = ee.Number(reduce.get('ndwi')).divide(1e6).round();
  print ('area of water pixels at ',   name ,  SqKm);
};

// visualization parameters for NDWI
var visparam = {
  min: 0,
  max: 1,
  palette: ['white', 'blue']
};

// Use the above function to calculate area  
var ndwi_Jun_17_2022 = calculate_ndwi(Jun_17_2022, 'Jun_17_2022'); 
var ndwi_May_29_2022 = calculate_ndwi(May_29_2022, 'May_29_2022');
var ndwi_May_13_2021 = calculate_ndwi(May_13_2021, 'Apr_14_2022');
var ndwi_Mar_10_2021 = calculate_ndwi(Mar_10_2021, 'Mar_10_2021');
var ndwi_Feb_25_2022 = calculate_ndwi(Feb_25_2022, 'Feb_25_2022');
var ndwi_Dec_26_2022 = calculate_ndwi(Dec_26_2022, 'Dec_26_2022');
var ndwi_Nov_21_2021 = calculate_ndwi(Nov_21_2021, 'Nov_21_2021'); 
var ndwi_Oct_15_2022 = calculate_ndwi(Oct_15_2022, 'Oct_15_2022');


Export.image.toDrive({
  image: May_29_2022,
  description: 'May_29_2022',
  folder: 'earthengine',
  region: reservoir,
  scale: 10,
  maxPixels: 1e10}) ;

